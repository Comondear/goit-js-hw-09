{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAsBjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEF,WAAUJ,UAGpBO,EAAO,CAAEH,WAAUJ,YAEpBA,MAIP,SAASY,EAAUC,G,IAAET,EAAFS,EAAET,SAAUJ,EAAZa,EAAYb,MAC7Bc,QAAQC,IAAI,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANhB,EAAM,OAC1DiB,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCH,OAAfZ,EAAS,QAAYY,OAANhB,EAAM,OAExE,SAASoB,EAASP,G,IAAET,EAAFS,EAAET,SAAUJ,EAAZa,EAAYb,MAC5Bc,QAAQC,IAAI,sBAAuCC,OAAfZ,EAAS,QAAYY,OAANhB,EAAM,OACzDiB,EAAAvB,GAASwB,OAAOG,QAAQ,sBAAqCL,OAAfZ,EAAS,QAAYY,OAANhB,EAAM,OAxCrEJ,EAAKC,KAAKyB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAIxB,EAAQyB,OAAO7B,EAAKI,MAAM0B,OACxBxB,EAASuB,OAAO7B,EAAKM,OAAOwB,OAC5BzB,EAAOwB,OAAO7B,EAAKK,KAAKyB,OAErBC,EAAI,EAAGA,EAAIzB,EAAQyB,IAC1BvB,SAAWuB,EAAI,EACL,IAANA,IAGF3B,GAAgBC,GAElBE,EAAcC,SAAUJ,GAAO4B,KAAKhB,GAAWiB,MAAMT,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]')\n}\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  const amount = Number(refs.amount.value);\n  const step = Number(refs.step.value);\n\n  for (let i = 0; i < amount; i++) {\n    position = i + 1;\n    if (i === 0) {\n      delay = delay;\n    } else {\n      delay = delay + step;\n    }\n    createPromise(position, delay).then(onFulfill).catch(onReject);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFulfill({ position, delay }) {\n  console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onReject({ position, delay }) {\n  console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onFulfill","param","console","log","concat","$parcel$interopDefault","Notify","success","$ce04d3a99e08e73b$var$onReject","failure","addEventListener","e","preventDefault","Number","value","i","then","catch"],"version":3,"file":"03-promises.01ec9805.js.map"}